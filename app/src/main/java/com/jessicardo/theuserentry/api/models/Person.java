package com.jessicardo.theuserentry.api.models;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Entity mapped to table PERSON.
 */
public class Person extends BaseModel implements Parcelable {

    public static final String TABLE_NAME = Person.class.getSimpleName();

    private String first_name;

    private String last_name;

    private String dob;

    private String zip_code;

    // TODO: figure out how to ignore field.
    private String tableName;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Person() {
    }

    public Person(Long id) {
        this.id = id;
    }

    public Person(Long id, String first_name, String last_name, String dob, String zip_code) {
        this.id = id;
        this.first_name = first_name;
        this.last_name = last_name;
        this.dob = dob;
        this.zip_code = zip_code;
    }

    public String getFirstName() {
        return first_name;
    }

    public void setFirstName(String first_name) {
        this.first_name = first_name;
    }

    public String getLastName() {
        return last_name;
    }

    public void setLastName(String last_name) {
        this.last_name = last_name;
    }

    public String getDob() {
        return dob;
    }

    public void setDob(String dob) {
        this.dob = dob;
    }

    public String getZipCode() {
        return zip_code;
    }

    public void setZipCode(String zip_code) {
        this.zip_code = zip_code;
    }

    // KEEP METHODS - put your custom methods here

    @Override
    public String toString() {
        return "Person{" +
                "id=" + id +
                ", first_name='" + first_name + '\'' +
                ", last_name='" + last_name + '\'' +
                ", dob='" + dob + '\'' +
                ", zip_code='" + zip_code + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Person)) {
            return false;
        }

        Person person = (Person) o;

        if (id != null ? !id.equals(person.id) : person.id != null) {
            return false;
        }
        if (first_name != null ? !first_name.equals(person.first_name)
                : person.first_name != null) {
            return false;
        }
        if (last_name != null ? !last_name.equals(person.last_name) : person.last_name != null) {
            return false;
        }
        if (dob != null ? !dob.equals(person.dob) : person.dob != null) {
            return false;
        }
        return !(zip_code != null ? !zip_code.equals(person.zip_code) : person.zip_code != null);

    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + (first_name != null ? first_name.hashCode() : 0);
        result = 31 * result + (last_name != null ? last_name.hashCode() : 0);
        result = 31 * result + (dob != null ? dob.hashCode() : 0);
        result = 31 * result + (zip_code != null ? zip_code.hashCode() : 0);
        return result;
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeValue(this.id);
        dest.writeString(this.first_name);
        dest.writeString(this.last_name);
        dest.writeString(this.dob);
        dest.writeString(this.zip_code);
    }

    protected Person(Parcel in) {
        this.id = (Long) in.readValue(Long.class.getClassLoader());
        this.first_name = in.readString();
        this.last_name = in.readString();
        this.dob = in.readString();
        this.zip_code = in.readString();
    }

    public static final Creator<Person> CREATOR = new Creator<Person>() {
        public Person createFromParcel(Parcel source) {
            return new Person(source);
        }

        public Person[] newArray(int size) {
            return new Person[size];
        }
    };

    @Override
    public String getTableName() {
        return TABLE_NAME;
    }

    // KEEP METHODS END
}
